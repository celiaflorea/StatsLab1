code cheatsheet


#dplyr demo

library(dplyr)

group_means <- gapminder_data %>%
              group_by(continent) %>%
              summarize(mean_lifeExp = mean(lifeExp))
              
#ggplot demo 
classic bar chart 

ggplot(group_means, aes(x = continent, y = mean_lifeExp))+
  geom_bar(stat = "identity")+
  ylab("Mean Life Expectancy")+
  xlab("Continent")+
  theme_classic()+
  ggtitle("Mean Life Expectancy by Continent")
  
  
  GGPLOT - scatter - note for line add group value: group = 1
  
  ggplot(group_means, aes(x = continent, y = mean_lifeExp, group = 1))+
    geom_point()+
    geom_line( )


ggplot error bars - bar graph

group_means <- gapminder_data %>%
                group_by(continent) %>%
                summarize(mean_lifeExp = mean(lifeExp),
                          sd_lifeExp = sd(lifeExp))

ggplot(group_means, aes(x = continent, y = mean_lifeExp))+
  geom_bar(stat="identity") +
  geom_errorbar(aes(ymin = mean_lifeExp - sd_lifeExp,
                    ymax = mean_lifeExp + sd_lifeExp),
                width = .25)
                
  ggplot line graph error bars               
                
                ggplot(group_means, aes(x = continent,
                        y = mean_lifeExp,
                        group = 1))+
  geom_point() +
  geom_line() +
  geom_errorbar(aes(ymin = mean_lifeExp - sd_lifeExp,
                    ymax = mean_lifeExp + sd_lifeExp),
                width = .25)
                
                
unlist() to change to a character vector 
tolower(letters) to change to all lower case

test_sample <- sample(x = final$lower_case, size = 5, replace = TRUE, prob = final$probabilities)


```{r}
logical_step <- sign(step)

sequence <- c()
counter <- 0
for(i in 1:length(logical_step)){
  if(logical_step[i] == 0{
    }counter <- o
  }



zscores (no auto function in R)
to_zscores <- function(raw, mu, sd){
  zscores <- (raw-mu)/sd
  return(zscores)
} 

some_numbers <- c(1,2,3,4,5)

to_zscores(some_numbers, 5, 1)

to_zscores_b <- function (raw, mu = NULL, sdev = NULL){
  if (is.null(mu) == TRUE) mu <- mean(raw) 
  if (is.null (sdev) == TRUE) sdev <- sd(raw) 
  zscores <- (raw-mu)/sdev
  return(zscores)
}

to_zscores_b(some_numbers)
                
                
                code problems downloading xlsx
                
                
function(.jpackage)

function(.jinit)

library(rJava)

library(xlsx)

install.packages(JVM)

install.packages(jinit)

install.packages("JavaGD")

install.packages("jmv")

package_version(JVM)

library(xlsx)

function(javareconf)
  
update.packages(checkBuilt = TRUE)


uninstall??
install.packages("JavaGD")


___
function name {package}
eg t.test {stats}
                
                
code snippet - put code into body text 
`r + function` (note not parens but slash under the tilda on keyboard)

eg: The correlation was $r$ = `r round(my_cor$estimate, digits=2)`, $p$ = `r round(my_cor$p.value, digits=2)`

note round function also used here to bring caculated values to 2 decimal places 


lab9 do i need this line/?
 the_data <- read.csv(file="lab9/infant_choice_data.csv")
 
 #library(readxl)

#read_excel("lab9/When not choosing leads to not liking_Data")
                